//COPYRIGHT "Copyright 1998 (c) NAGAO, Sadakazu. All rights reserved."
const unsigned char msx[]={
//startchar 0
//encoding 0
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 1
//encoding 1
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x20,
0x70,
0x70,
0xF8,
0x70,
0x70,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar 2
//encoding 2
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x50,
0xA8,
0x50,
0xA8,
0x50,
0xA8,
0x50,
0xA8,
0x50,
0xA8,
//ENDCHAR
//startchar 3
//encoding 3
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0xA0,
0xA0,
0xE0,
0xA0,
0xB8,
0x10,
0x10,
0x10,
0x10,
0x00,
//ENDCHAR
//startchar 4
//encoding 4
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0xE0,
0x80,
0xC0,
0x80,
0xF8,
0x20,
0x30,
0x20,
0x20,
0x00,
//ENDCHAR
//startchar 5
//encoding 5
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x60,
0x80,
0x80,
0x80,
0x70,
0x28,
0x30,
0x28,
0x28,
0x00,
//ENDCHAR
//startchar 6
//encoding 6
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x80,
0x80,
0x80,
0x80,
0xF8,
0x20,
0x30,
0x20,
0x20,
0x00,
//ENDCHAR
//startchar 7
//encoding 7
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x60,
0x90,
0x90,
0x60,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 8
//encoding 8
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x20,
0x20,
0xF8,
0x20,
0x20,
0xF8,
0x00,
0x00,
//ENDCHAR
//startchar 9
//encoding 9
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0xC0,
0xA0,
0xA0,
0xA0,
0xA0,
0x20,
0x20,
0x20,
0x38,
0x00,
//ENDCHAR
//startchar a
//encoding 10
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0xA0,
0xA0,
0xA0,
0x40,
0x78,
0x10,
0x10,
0x10,
0x10,
0x00,
//ENDCHAR
//startchar b
//encoding 11
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x20,
0x20,
0x20,
0x20,
0xE0,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar c
//encoding 12
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0xE0,
0x20,
0x20,
0x20,
0x20,
0x20,
//ENDCHAR
//startchar d
//encoding 13
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x38,
0x20,
0x20,
0x20,
0x20,
0x20,
//ENDCHAR
//startchar e
//encoding 14
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x20,
0x20,
0x20,
0x20,
0x38,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar f
//encoding 15
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x20,
0x20,
0x20,
0x20,
0xF8,
0x20,
0x20,
0x20,
0x20,
0x20,
//ENDCHAR
//startchar 10
//encoding 16
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0xF8,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 11
//encoding 17
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0xF8,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 12
//encoding 18
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0xF8,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 13
//encoding 19
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0xF8,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 14
//encoding 20
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0xF8,
//ENDCHAR
//startchar 15
//encoding 21
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x20,
0x20,
0x20,
0x20,
0x38,
0x20,
0x20,
0x20,
0x20,
0x20,
//ENDCHAR
//startchar 16
//encoding 22
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x20,
0x20,
0x20,
0x20,
0xE0,
0x20,
0x20,
0x20,
0x20,
0x20,
//ENDCHAR
//startchar 17
//encoding 23
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x20,
0x20,
0x20,
0x20,
0xF8,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 18
//encoding 24
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0xF8,
0x20,
0x20,
0x20,
0x20,
0x20,
//ENDCHAR
//startchar 19
//encoding 25
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x20,
0x20,
0x20,
0x20,
0x20,
0x20,
0x20,
0x20,
0x20,
0x20,
//ENDCHAR
//startchar 1a
//encoding 26
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x10,
0x20,
0x40,
0x20,
0x10,
0x70,
0x00,
0x00,
//ENDCHAR
//startchar 1b
//encoding 27
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x40,
0x20,
0x10,
0x20,
0x40,
0x70,
0x00,
0x00,
//ENDCHAR
//startchar 1c
//encoding 28
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0xF8,
0x50,
0x50,
0x98,
0x00,
0x00,
//ENDCHAR
//startchar 1d
//encoding 29
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x10,
0x10,
0xF8,
0x20,
0xF8,
0x40,
0x40,
0x00,
0x00,
//ENDCHAR
//startchar 1e
//encoding 30
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x30,
0x48,
0x40,
0xF0,
0x40,
0x48,
0xB0,
0x00,
0x00,
//ENDCHAR
//startchar 1f
//encoding 31
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x20,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 20
//encoding 32
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 21
//encoding 33
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x20,
0x20,
0x20,
0x20,
0x00,
0x00,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar 22
//encoding 34
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x50,
0x50,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 23
//encoding 35
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x50,
0x50,
0xF8,
0x50,
0xF8,
0x50,
0x50,
0x00,
0x00,
//ENDCHAR
//startchar 24
//encoding 36
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x20,
0x78,
0xA0,
0x70,
0x28,
0xF0,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar 25
//encoding 37
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x68,
0x68,
0x10,
0x20,
0x58,
0x58,
0x00,
0x00,
//ENDCHAR
//startchar 26
//encoding 38
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x20,
0x50,
0x40,
0x28,
0x48,
0x50,
0x28,
0x00,
0x00,
//ENDCHAR
//startchar 27
//encoding 39
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x20,
0x20,
0x40,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 28
//encoding 40
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x08,
0x10,
0x10,
0x20,
0x20,
0x20,
0x10,
0x10,
0x08,
0x00,
//ENDCHAR
//startchar 29
//encoding 41
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x40,
0x20,
0x20,
0x10,
0x10,
0x10,
0x20,
0x20,
0x40,
0x00,
//ENDCHAR
//startchar 2a
//encoding 42
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x50,
0x20,
0xF8,
0x20,
0x50,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 2b
//encoding 43
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x20,
0x20,
0xF8,
0x20,
0x20,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 2c
//encoding 44
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x20,
0x20,
0x40,
0x00,
//ENDCHAR
//startchar 2d
//encoding 45
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x78,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 2e
//encoding 46
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x30,
0x30,
0x00,
0x00,
//ENDCHAR
//startchar 2f
//encoding 47
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x08,
0x08,
0x10,
0x10,
0x20,
0x20,
0x40,
0x40,
0x00,
//ENDCHAR
//startchar 30
//encoding 48
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x30,
0x48,
0x58,
0x68,
0x48,
0x48,
0x30,
0x00,
0x00,
//ENDCHAR
//startchar 31
//encoding 49
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x20,
0x60,
0x20,
0x20,
0x20,
0x20,
0x70,
0x00,
0x00,
//ENDCHAR
//startchar 32
//encoding 50
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x30,
0x48,
0x08,
0x10,
0x20,
0x40,
0x78,
0x00,
0x00,
//ENDCHAR
//startchar 33
//encoding 51
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x30,
0x48,
0x08,
0x10,
0x08,
0x48,
0x30,
0x00,
0x00,
//ENDCHAR
//startchar 34
//encoding 52
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x10,
0x30,
0x50,
0x50,
0x78,
0x10,
0x10,
0x00,
0x00,
//ENDCHAR
//startchar 35
//encoding 53
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x78,
0x40,
0x70,
0x08,
0x08,
0x48,
0x30,
0x00,
0x00,
//ENDCHAR
//startchar 36
//encoding 54
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x30,
0x48,
0x40,
0x70,
0x48,
0x48,
0x30,
0x00,
0x00,
//ENDCHAR
//startchar 37
//encoding 55
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x78,
0x48,
0x10,
0x10,
0x20,
0x20,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar 38
//encoding 56
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x30,
0x48,
0x48,
0x30,
0x48,
0x48,
0x30,
0x00,
0x00,
//ENDCHAR
//startchar 39
//encoding 57
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x30,
0x48,
0x48,
0x38,
0x08,
0x48,
0x30,
0x00,
0x00,
//ENDCHAR
//startchar 3a
//encoding 58
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x30,
0x30,
0x00,
0x00,
0x30,
0x30,
0x00,
0x00,
//ENDCHAR
//startchar 3b
//encoding 59
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x30,
0x30,
0x00,
0x00,
0x30,
0x10,
0x20,
0x00,
//ENDCHAR
//startchar 3c
//encoding 60
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x08,
0x10,
0x20,
0x40,
0x20,
0x10,
0x08,
0x00,
0x00,
//ENDCHAR
//startchar 3d
//encoding 61
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x78,
0x00,
0x78,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 3e
//encoding 62
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x40,
0x20,
0x10,
0x08,
0x10,
0x20,
0x40,
0x00,
0x00,
//ENDCHAR
//startchar 3f
//encoding 63
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x30,
0x48,
0x08,
0x10,
0x10,
0x00,
0x10,
0x00,
0x00,
//ENDCHAR
//startchar 40
//encoding 64
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x30,
0x48,
0x58,
0x68,
0x50,
0x40,
0x30,
0x00,
0x00,
//ENDCHAR
//startchar 41
//encoding 65
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x30,
0x48,
0x48,
0x78,
0x48,
0x48,
0x48,
0x00,
0x00,
//ENDCHAR
//startchar 42
//encoding 66
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x70,
0x48,
0x48,
0x70,
0x48,
0x48,
0x70,
0x00,
0x00,
//ENDCHAR
//startchar 43
//encoding 67
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x30,
0x48,
0x40,
0x40,
0x40,
0x48,
0x30,
0x00,
0x00,
//ENDCHAR
//startchar 44
//encoding 68
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x70,
0x48,
0x48,
0x48,
0x48,
0x48,
0x70,
0x00,
0x00,
//ENDCHAR
//startchar 45
//encoding 69
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x78,
0x40,
0x40,
0x70,
0x40,
0x40,
0x78,
0x00,
0x00,
//ENDCHAR
//startchar 46
//encoding 70
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x78,
0x40,
0x40,
0x70,
0x40,
0x40,
0x40,
0x00,
0x00,
//ENDCHAR
//startchar 47
//encoding 71
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x30,
0x48,
0x40,
0x58,
0x48,
0x48,
0x38,
0x00,
0x00,
//ENDCHAR
//startchar 48
//encoding 72
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x48,
0x48,
0x48,
0x78,
0x48,
0x48,
0x48,
0x00,
0x00,
//ENDCHAR
//startchar 49
//encoding 73
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x70,
0x20,
0x20,
0x20,
0x20,
0x20,
0x70,
0x00,
0x00,
//ENDCHAR
//startchar 4a
//encoding 74
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x18,
0x08,
0x08,
0x08,
0x48,
0x48,
0x30,
0x00,
0x00,
//ENDCHAR
//startchar 4b
//encoding 75
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x48,
0x48,
0x50,
0x60,
0x50,
0x48,
0x48,
0x00,
0x00,
//ENDCHAR
//startchar 4c
//encoding 76
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x40,
0x40,
0x40,
0x40,
0x40,
0x40,
0x78,
0x00,
0x00,
//ENDCHAR
//startchar 4d
//encoding 77
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x48,
0x78,
0x78,
0x48,
0x48,
0x48,
0x48,
0x00,
0x00,
//ENDCHAR
//startchar 4e
//encoding 78
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x48,
0x48,
0x68,
0x58,
0x48,
0x48,
0x48,
0x00,
0x00,
//ENDCHAR
//startchar 4f
//encoding 79
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x30,
0x48,
0x48,
0x48,
0x48,
0x48,
0x30,
0x00,
0x00,
//ENDCHAR
//startchar 50
//encoding 80
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x70,
0x48,
0x48,
0x70,
0x40,
0x40,
0x40,
0x00,
0x00,
//ENDCHAR
//startchar 51
//encoding 81
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x30,
0x48,
0x48,
0x48,
0x68,
0x58,
0x30,
0x08,
0x00,
//ENDCHAR
//startchar 52
//encoding 82
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x70,
0x48,
0x48,
0x70,
0x60,
0x50,
0x48,
0x00,
0x00,
//ENDCHAR
//startchar 53
//encoding 83
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x30,
0x48,
0x40,
0x30,
0x08,
0x48,
0x30,
0x00,
0x00,
//ENDCHAR
//startchar 54
//encoding 84
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0xF8,
0x20,
0x20,
0x20,
0x20,
0x20,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar 55
//encoding 85
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x48,
0x48,
0x48,
0x48,
0x48,
0x48,
0x30,
0x00,
0x00,
//ENDCHAR
//startchar 56
//encoding 86
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x48,
0x48,
0x48,
0x48,
0x78,
0x30,
0x30,
0x00,
0x00,
//ENDCHAR
//startchar 57
//encoding 87
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x48,
0x48,
0x48,
0x48,
0x78,
0x78,
0x48,
0x00,
0x00,
//ENDCHAR
//startchar 58
//encoding 88
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x48,
0x48,
0x48,
0x30,
0x48,
0x48,
0x48,
0x00,
0x00,
//ENDCHAR
//startchar 59
//encoding 89
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x88,
0x88,
0x50,
0x20,
0x20,
0x20,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar 5a
//encoding 90
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x78,
0x08,
0x10,
0x20,
0x20,
0x40,
0x78,
0x00,
0x00,
//ENDCHAR
//startchar 5b
//encoding 91
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x38,
0x20,
0x20,
0x20,
0x20,
0x20,
0x20,
0x20,
0x38,
0x00,
//ENDCHAR
//startchar 5c
//encoding 92
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x88,
0x50,
0x20,
0xF8,
0x20,
0xF8,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar 5d
//encoding 93
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x70,
0x10,
0x10,
0x10,
0x10,
0x10,
0x10,
0x10,
0x70,
0x00,
//ENDCHAR
//startchar 5e
//encoding 94
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x20,
0x50,
0x88,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 5f
//encoding 95
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x78,
0x00,
//ENDCHAR
//startchar 60
//encoding 96
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x20,
0x20,
0x10,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 61
//encoding 97
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x30,
0x08,
0x38,
0x48,
0x38,
0x00,
0x00,
//ENDCHAR
//startchar 62
//encoding 98
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x40,
0x40,
0x70,
0x48,
0x48,
0x48,
0x70,
0x00,
0x00,
//ENDCHAR
//startchar 63
//encoding 99
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x30,
0x48,
0x40,
0x48,
0x30,
0x00,
0x00,
//ENDCHAR
//startchar 64
//encoding 100
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x08,
0x08,
0x38,
0x48,
0x48,
0x48,
0x38,
0x00,
0x00,
//ENDCHAR
//startchar 65
//encoding 101
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x30,
0x48,
0x78,
0x40,
0x30,
0x00,
0x00,
//ENDCHAR
//startchar 66
//encoding 102
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x18,
0x20,
0x78,
0x20,
0x20,
0x20,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar 67
//encoding 103
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x38,
0x48,
0x48,
0x38,
0x08,
0x30,
0x00,
//ENDCHAR
//startchar 68
//encoding 104
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x40,
0x40,
0x70,
0x48,
0x48,
0x48,
0x48,
0x00,
0x00,
//ENDCHAR
//startchar 69
//encoding 105
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x20,
0x00,
0x60,
0x20,
0x20,
0x20,
0x70,
0x00,
0x00,
//ENDCHAR
//startchar 6a
//encoding 106
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x08,
0x00,
0x18,
0x08,
0x08,
0x08,
0x48,
0x30,
0x00,
//ENDCHAR
//startchar 6b
//encoding 107
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x40,
0x40,
0x48,
0x50,
0x60,
0x50,
0x48,
0x00,
0x00,
//ENDCHAR
//startchar 6c
//encoding 108
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x60,
0x20,
0x20,
0x20,
0x20,
0x20,
0x70,
0x00,
0x00,
//ENDCHAR
//startchar 6d
//encoding 109
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0xD0,
0xA8,
0xA8,
0xA8,
0xA8,
0x00,
0x00,
//ENDCHAR
//startchar 6e
//encoding 110
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x70,
0x48,
0x48,
0x48,
0x48,
0x00,
0x00,
//ENDCHAR
//startchar 6f
//encoding 111
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x30,
0x48,
0x48,
0x48,
0x30,
0x00,
0x00,
//ENDCHAR
//startchar 70
//encoding 112
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x70,
0x48,
0x48,
0x70,
0x40,
0x40,
0x00,
//ENDCHAR
//startchar 71
//encoding 113
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x38,
0x48,
0x48,
0x38,
0x08,
0x08,
0x00,
//ENDCHAR
//startchar 72
//encoding 114
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x58,
0x60,
0x40,
0x40,
0x40,
0x00,
0x00,
//ENDCHAR
//startchar 73
//encoding 115
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x38,
0x40,
0x30,
0x08,
0x70,
0x00,
0x00,
//ENDCHAR
//startchar 74
//encoding 116
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x20,
0x20,
0x78,
0x20,
0x20,
0x20,
0x18,
0x00,
0x00,
//ENDCHAR
//startchar 75
//encoding 117
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x48,
0x48,
0x48,
0x48,
0x38,
0x00,
0x00,
//ENDCHAR
//startchar 76
//encoding 118
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x48,
0x48,
0x48,
0x30,
0x30,
0x00,
0x00,
//ENDCHAR
//startchar 77
//encoding 119
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x88,
0xA8,
0xA8,
0xA8,
0x50,
0x00,
0x00,
//ENDCHAR
//startchar 78
//encoding 120
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x48,
0x48,
0x30,
0x48,
0x48,
0x00,
0x00,
//ENDCHAR
//startchar 79
//encoding 121
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x48,
0x48,
0x48,
0x38,
0x08,
0x30,
0x00,
//ENDCHAR
//startchar 7a
//encoding 122
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x78,
0x10,
0x20,
0x40,
0x78,
0x00,
0x00,
//ENDCHAR
//startchar 7b
//encoding 123
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x18,
0x20,
0x20,
0x20,
0x40,
0x20,
0x20,
0x20,
0x18,
0x00,
//ENDCHAR
//startchar 7c
//encoding 124
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x20,
0x20,
0x20,
0x20,
0x00,
0x20,
0x20,
0x20,
0x20,
0x00,
//ENDCHAR
//startchar 7d
//encoding 125
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x60,
0x10,
0x10,
0x10,
0x08,
0x10,
0x10,
0x10,
0x60,
0x00,
//ENDCHAR
//startchar 7e
//encoding 126
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x78,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 7f
//encoding 127
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 80
//encoding 128
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 81
//encoding 129
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 82
//encoding 130
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 83
//encoding 131
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 84
//encoding 132
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 85
//encoding 133
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 86
//encoding 134
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 87
//encoding 135
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 88
//encoding 136
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 89
//encoding 137
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 8a
//encoding 138
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 8b
//encoding 139
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 8c
//encoding 140
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 8d
//encoding 141
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 8e
//encoding 142
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 8f
//encoding 143
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 90
//encoding 144
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 91
//encoding 145
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 92
//encoding 146
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 93
//encoding 147
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 94
//encoding 148
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 95
//encoding 149
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 96
//encoding 150
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 97
//encoding 151
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 98
//encoding 152
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 99
//encoding 153
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 9a
//encoding 154
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 9b
//encoding 155
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 9c
//encoding 156
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 9d
//encoding 157
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 9e
//encoding 158
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar 9f
//encoding 159
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar a0
//encoding 160
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar a1
//encoding 161
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x70,
0x50,
0x70,
0x00,
0x00,
//ENDCHAR
//startchar a2
//encoding 162
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x38,
0x20,
0x20,
0x20,
0x20,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar a3
//encoding 163
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x10,
0x10,
0x10,
0x10,
0x70,
0x00,
0x00,
//ENDCHAR
//startchar a4
//encoding 164
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x40,
0x20,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar a5
//encoding 165
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x20,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar a6
//encoding 166
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x78,
0x08,
0x78,
0x08,
0x08,
0x10,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar a7
//encoding 167
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x78,
0x08,
0x30,
0x20,
0x40,
0x00,
0x00,
//ENDCHAR
//startchar a8
//encoding 168
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x08,
0x10,
0x70,
0x10,
0x10,
0x00,
0x00,
//ENDCHAR
//startchar a9
//encoding 169
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x20,
0x78,
0x48,
0x08,
0x10,
0x00,
0x00,
//ENDCHAR
//startchar aa
//encoding 170
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x70,
0x20,
0x20,
0x70,
0x00,
0x00,
//ENDCHAR
//startchar ab
//encoding 171
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x10,
0x78,
0x10,
0x30,
0x50,
0x00,
0x00,
//ENDCHAR
//startchar ac
//encoding 172
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x20,
0x78,
0x28,
0x20,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar ad
//encoding 173
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x30,
0x10,
0x10,
0x78,
0x00,
0x00,
//ENDCHAR
//startchar ae
//encoding 174
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x78,
0x08,
0x38,
0x08,
0x78,
0x00,
0x00,
//ENDCHAR
//startchar af
//encoding 175
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x50,
0x58,
0x08,
0x30,
0x00,
0x00,
//ENDCHAR
//startchar b0
//encoding 176
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x40,
0x38,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar b1
//encoding 177
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x78,
0x08,
0x28,
0x30,
0x20,
0x20,
0x40,
0x00,
0x00,
//ENDCHAR
//startchar b2
//encoding 178
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x08,
0x08,
0x10,
0x30,
0x50,
0x10,
0x10,
0x00,
0x00,
//ENDCHAR
//startchar b3
//encoding 179
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x20,
0x78,
0x48,
0x08,
0x08,
0x10,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar b4
//encoding 180
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x70,
0x20,
0x20,
0x20,
0x20,
0xF8,
0x00,
0x00,
//ENDCHAR
//startchar b5
//encoding 181
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x10,
0x78,
0x10,
0x30,
0x30,
0x50,
0x50,
0x00,
0x00,
//ENDCHAR
//startchar b6
//encoding 182
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x20,
0x78,
0x28,
0x28,
0x28,
0x48,
0x58,
0x00,
0x00,
//ENDCHAR
//startchar b7
//encoding 183
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x20,
0x78,
0x20,
0x78,
0x10,
0x10,
0x10,
0x00,
0x00,
//ENDCHAR
//startchar b8
//encoding 184
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x38,
0x28,
0x48,
0x08,
0x08,
0x10,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar b9
//encoding 185
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x40,
0x78,
0x50,
0x50,
0x10,
0x10,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar ba
//encoding 186
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x78,
0x08,
0x08,
0x08,
0x08,
0x78,
0x00,
0x00,
//ENDCHAR
//startchar bb
//encoding 187
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x50,
0xF8,
0x50,
0x50,
0x10,
0x10,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar bc
//encoding 188
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x60,
0x08,
0x68,
0x08,
0x08,
0x10,
0x60,
0x00,
0x00,
//ENDCHAR
//startchar bd
//encoding 189
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x78,
0x08,
0x10,
0x10,
0x30,
0x28,
0x48,
0x00,
0x00,
//ENDCHAR
//startchar be
//encoding 190
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x20,
0x20,
0x78,
0x28,
0x20,
0x20,
0x18,
0x00,
0x00,
//ENDCHAR
//startchar bf
//encoding 191
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x48,
0x48,
0x28,
0x08,
0x10,
0x10,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar c0
//encoding 192
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x38,
0x28,
0x28,
0x58,
0x08,
0x10,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar c1
//encoding 193
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x08,
0x30,
0x10,
0x78,
0x10,
0x10,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar c2
//encoding 194
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x50,
0x58,
0x58,
0x08,
0x08,
0x10,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar c3
//encoding 195
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x70,
0x00,
0xF8,
0x20,
0x20,
0x20,
0x40,
0x00,
0x00,
//ENDCHAR
//startchar c4
//encoding 196
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x40,
0x40,
0x60,
0x50,
0x40,
0x40,
0x40,
0x00,
0x00,
//ENDCHAR
//startchar c5
//encoding 197
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x10,
0x10,
0x78,
0x10,
0x10,
0x10,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar c6
//encoding 198
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x30,
0x00,
0x00,
0x00,
0x00,
0x78,
0x00,
0x00,
//ENDCHAR
//startchar c7
//encoding 199
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x78,
0x08,
0x30,
0x10,
0x28,
0x40,
0x00,
0x00,
//ENDCHAR
//startchar c8
//encoding 200
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x20,
0xF8,
0x10,
0x20,
0x70,
0xA8,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar c9
//encoding 201
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x08,
0x08,
0x08,
0x10,
0x10,
0x20,
0x40,
0x00,
0x00,
//ENDCHAR
//startchar ca
//encoding 202
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x20,
0x10,
0x08,
0x48,
0x48,
0x48,
0x48,
0x00,
0x00,
//ENDCHAR
//startchar cb
//encoding 203
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x40,
0x40,
0x78,
0x40,
0x40,
0x40,
0x38,
0x00,
0x00,
//ENDCHAR
//startchar cc
//encoding 204
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x78,
0x08,
0x08,
0x08,
0x08,
0x10,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar cd
//encoding 205
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x20,
0x50,
0x50,
0x08,
0x08,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar ce
//encoding 206
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x20,
0xF8,
0x20,
0x20,
0xA8,
0xA8,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar cf
//encoding 207
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x78,
0x08,
0x10,
0x50,
0x20,
0x10,
0x00,
0x00,
//ENDCHAR
//startchar d0
//encoding 208
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x70,
0x00,
0x70,
0x00,
0x70,
0x08,
0x00,
0x00,
//ENDCHAR
//startchar d1
//encoding 209
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x10,
0x20,
0x20,
0x40,
0x48,
0x78,
0x08,
0x00,
0x00,
//ENDCHAR
//startchar d2
//encoding 210
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x08,
0x08,
0x28,
0x10,
0x18,
0x28,
0x40,
0x00,
0x00,
//ENDCHAR
//startchar d3
//encoding 211
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x78,
0x20,
0x78,
0x20,
0x20,
0x20,
0x18,
0x00,
0x00,
//ENDCHAR
//startchar d4
//encoding 212
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x20,
0x78,
0x28,
0x20,
0x20,
0x20,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar d5
//encoding 213
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x30,
0x10,
0x10,
0x10,
0x10,
0x78,
0x00,
0x00,
//ENDCHAR
//startchar d6
//encoding 214
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x78,
0x08,
0x08,
0x38,
0x08,
0x08,
0x78,
0x00,
0x00,
//ENDCHAR
//startchar d7
//encoding 215
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x78,
0x00,
0x78,
0x08,
0x08,
0x10,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar d8
//encoding 216
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x48,
0x48,
0x48,
0x08,
0x08,
0x10,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar d9
//encoding 217
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x10,
0x50,
0x50,
0x50,
0x50,
0x58,
0x50,
0x00,
0x00,
//ENDCHAR
//startchar da
//encoding 218
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x40,
0x40,
0x40,
0x40,
0x48,
0x50,
0x60,
0x00,
0x00,
//ENDCHAR
//startchar db
//encoding 219
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x78,
0x48,
0x48,
0x48,
0x48,
0x48,
0x78,
0x00,
0x00,
//ENDCHAR
//startchar dc
//encoding 220
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x78,
0x48,
0x08,
0x08,
0x08,
0x10,
0x20,
0x00,
0x00,
//ENDCHAR
//startchar dd
//encoding 221
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x68,
0x08,
0x08,
0x08,
0x10,
0x60,
0x00,
0x00,
//ENDCHAR
//startchar de
//encoding 222
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x20,
0x10,
0x40,
0x20,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar df
//encoding 223
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x20,
0x50,
0x50,
0x20,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar e0
//encoding 224
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar e1
//encoding 225
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar e2
//encoding 226
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar e3
//encoding 227
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar e4
//encoding 228
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar e5
//encoding 229
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar e6
//encoding 230
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar e7
//encoding 231
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar e8
//encoding 232
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar e9
//encoding 233
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar ea
//encoding 234
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar eb
//encoding 235
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar ec
//encoding 236
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar ed
//encoding 237
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar ee
//encoding 238
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar ef
//encoding 239
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar f0
//encoding 240
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar f1
//encoding 241
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar f2
//encoding 242
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar f3
//encoding 243
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar f4
//encoding 244
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar f5
//encoding 245
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar f6
//encoding 246
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar f7
//encoding 247
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar f8
//encoding 248
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar f9
//encoding 249
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar fa
//encoding 250
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar fb
//encoding 251
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar fc
//encoding 252
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar fd
//encoding 253
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar fe
//encoding 254
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
//startchar ff
//encoding 255
//swidth 480 0
//dwidth 5 0
//bbx 5 10 0 -2
//BITMAP
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
//ENDCHAR
};
